# .github/workflows/backend-ci.yml

name: Backend CI - Tests

on:
  push:
    branches: [ "master", "develop" ] # <-- Corregido a "master"
  pull_request:
    branches: [ "master", "develop" ] # <-- Corregido a "master"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Correr Tests con Pytest
        # ==========================================================
        # ¡AQUÍ ESTÁ LA MAGIA!
        # Le damos al robot todas las variables que necesita, pero con
        # valores de prueba que no son secretos.
        # ==========================================================
        env:
          PYTHONUTF8: "1"
          APP_ENV: "test"
          FRONTEND_URL: "http://localhost:3000"
          BACKEND_URL: "http://test"
          # Le damos una URL de mentira para que no se queje.
          REDIS_URL: "redis://localhost:6379"
          # Para los tests de DB SQL, usamos una base de datos en memoria,
          # así que esta URL es perfecta y no necesita un servidor real.
          DB_SQL_URI: "sqlite+aiosqlite:///:memory:"
          # La DB NoSQL se mockea, pero la variable debe existir.
          DB_NOSQL_URI: "mongodb://localhost:27017/testdb"
          # El resto son simplemente valores falsos para que la app no explote.
          SECRET_KEY: "este-es-un-secreto-de-prueba-para-ci-muy-largo"
          ALGORITHM: "HS256"
          ACCESS_TOKEN_EXPIRE_MINUTES: "30"
          OPENROUTER_API_KEY: "sk-test-key"
          OPENROUTER_MODEL: "test-model"
          MERCADOPAGO_TOKEN: "mp-test-token"
          CLOUDINARY_CLOUD_NAME: "test-cloud"
          CLOUDINARY_API_KEY: "test-key"
          CLOUDINARY_API_SECRET: "test-secret"
          EMAIL_SENDER: "test@example.com"
          EMAIL_APP_PASSWORD: "test-password"
          # Estas las agregué porque te salieron en el error, significan
          # que tu settings.py las necesita.
          OPENROUTER_API_URL: "https://test.url"
          SITE_NAME: "Test Site"
        run: python -m pytest